scriptencoding utf-8
set encoding=utf-8

" required during Vundle calls
set nocompatible
filetype off

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" Snippets
Plugin 'honza/vim-snippets'

" Project-specific indentation/tabs
Plugin 'editorconfig/editorconfig-vim'

" Fancy bottom bar
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'

" Navigation
Plugin 'scrooloose/nerdtree'

" Ledger
Plugin 'ledger/vim-ledger'

" Kotlin
Plugin 'udalov/kotlin-vim'

" Rust
Plugin 'rust-lang/rust.vim'
Plugin 'racer-rust/vim-racer'

" Git
Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-gitgutter'
Plugin 'Xuyuanp/nerdtree-git-plugin'

" Autocompletion
Plugin 'valloric/youcompleteme'

" Syntax checking
Plugin 'scrooloose/syntastic'

" Theme
Plugin 'altercation/vim-colors-solarized'

" Hilight extra whitespace
Plugin 'ntpeters/vim-better-whitespace'

" Show guides for indentation
" Currently does not work with solarized
" Plugin 'nathanaelkane/vim-indent-guides'

call vundle#end()

" Turn indent back on
filetype plugin indent on

syntax enable
set background=dark
colorscheme solarized
set number
set list
set listchars=tab:»\ ,trail:·,extends:›,nbsp:␣,precedes:‹
"eol:↲,
" allow backspacing over everything in insert mode
set backspace=indent,eol,start

" vim-airline config
"
" Automatically displays all buffers when there's only one tab open.
let g:airline#extensions#tabline#enabled = 1
" Make statusline appear all the time
set laststatus=2

" Indent guide config
"let g:indent_guides_start_level = 2
"let g:indent_guides_guide_size = 1

" Make editorconfig and fugitive play nice
let g:EditorConfig_exclude_patterns = ['fugitive://.*']

"" NerdTREE Configuration

let NERDTreeShowHidden=1

" Tag reading from stdin, for following NERDTree hooks
autocmd StdinReadPre * let s:std_in=1

" Open NERDTree automatically when vim starts up on opening a directory.
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | endif

" Open NERDTree automatically when vim starts up if no files were specified
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

" vim-racer
"
" It's worth turning on 'hidden' mode for buffers otherwise you need to save
" the current buffer every time you do a goto-definition.
set hidden
let g:racer_cmd = "/path/to/racer/bin"
" Optional, show complete function definitions in completer
" let g:racer_experimental_completer = 1

" Autocompletion on
set omnifunc=syntaxcomplete#Complete

" Vim internal tab-completion
set wildmenu
set wildmode=list:longest

set nobackup		" do not keep a backup file, use versions instead
set history=50		" keep 50 lines of command line history
set incsearch		" do incremental searching

" Don't use Ex mode, use Q for formatting
map Q gq

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap <C-U> <C-G>u<C-U>

" In many terminal emulators the mouse works just fine, thus enable it.
if has('mouse')
  set mouse=a
endif

" Make selections go into the system clipboard
"set clipboard=unnamedplus

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
" Only define it when not defined already.
if !exists(":DiffOrig")
  command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis
		  \ | wincmd p | diffthis
endif

" Global tab settings
"set tabstop=4
"set shiftwidth=4
"set expandtab
"set smarttab
